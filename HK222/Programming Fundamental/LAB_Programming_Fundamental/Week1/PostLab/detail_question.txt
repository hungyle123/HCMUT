--------------------------------------------ClassString------------------------------------------------
*** Bài 1:

[Tiếng Việt]
Viết chương trình đọc vào chuỗi s từ bàn phím, tìm và trả về chuỗi con có tính chất đối xứng dài nhất có trong s.

Đầu vào:
Chuỗi s.
Đầu ra:
Chuỗi con có tính chất đối xứng dài nhất có trong s. Trong trường hợp có nhiều chuỗi con dài nhất có cùng độ dài, trả về chuỗi con có vị trí bắt đầu nhỏ nhất.

*** Bài 2:

[Tiếng Việt ]
Viết chương trình đọc vào chuỗi s từ bàn phím, tìm và trả về độ dài của chuỗi con dài nhất không có ký tự nào được lặp lại có trong s.

Đầu vào:
Chuỗi s.
Đầu ra:
Độ dài của chuỗi con dài nhất không có ký tự nào được lặp lại có trong s.


--------------------------------------------Multi_Dimensional_Array-----------------------------------
*** Bài 1:
Mô tả tiếng Việt:
Cho mảng 2 chiều chứa các số nguyên, kích thước M x N.
Hiện thực hàm:
int specialCells(int arr[][1000], int row, int col);
Trong đó; arr, row và col lần lượt là mảng 2 chiều, số hàng và số cột của mảng. Một ô trong mảng được gọi là HN3 nếu tổng tất cả các phần tử trong hàng chứa ô đó và tổng tất cả các phần tử trong cột chứa ô đó đều là số nguyên tố. Tìm số ô HN3 trong mảng.
Ghi chú: (Các) thư viện iostream, vector và string đã được khai báo, và namespace std đã được sử dụng.


*** Bài 2:
Mô tả tiếng Việt:
Cho mảng 2 chiều chứa các số nguyên, kích thước M x N.
Hiện thực hàm:
int subMatrix(int arr[][1000], int row, int col);
Trong đó; arr, row và col lần lượt là mảng 2 chiều, số hàng và số cột của mảng. Một mảng con kích thước 2x2 thuộc mảng đã cho được gọi là HN4 nếu tổng tất cả các phần tử trong nó là một số lẻ. Tìm số mảng con HN4 trong mảng đã cho.
Ghi chú: (Các) thư viện iostream, vector và string đã được khai báo, và namespace std đã được sử dụng.

-----------------------------------------------IO-----------------------------------------------

*** Bài 1:
Viết hàm void studendGrading(string fileName) đọc một file đuôi txt, dòng đầu gồm 1 số nguyên dương N, N dòng theo sau mỗi dòng chứa 4 số thực lần lượt là điểm số của các môn NMĐT,  KTLT, DSA và PPL của N học sinh.
Điểm trung bình (ĐTB) của sinh viên sẽ là trung bình cộng của 4 cột điểm trên. Sinh viên sẽ được xếp loại dựa trên ĐTB như sau:
Loại A nếu ĐTB >= 8 và không có môn nào dưới 5.
Loại B nếu 8 > ĐTB >= 6.5 và không có môn nào dưới 5.
Loại C nếu 6.5 > ĐTB >= 5 và không có môn nào dưới 5
Loại D cho các trường hợp còn lại
Xác định số lượng sinh viên mỗi loại và xuất kết quả ra màn hình.
Đầu vào:
Biến "fileName" là tên file chứa chứa thông tin về điểm số của sinh viên.
Đầu ra:
Số lượng sinh viên mỗi loại được ghi ra màn hình.


*** Bài 2:
Viết hàm void calMoney(string price, string buy) đọc vào 2 file price.txt và buy.txt.
Trong đó:

File price.txt chứa thông tin về các sản phẩm, gồm: Dòng đầu tiên chứa số nguyên dương N (N <= 20) là số lượng sản phẩm hiện có trong cửa hàng. N dòng tiếp theo mỗi dòng chứa 2 số nguyên dương là ID và giá của các sản phẩm tương ứng

     Ví dụ:
          3
          1 10
          2 15
          3 12
Có nghĩa là: hiện tại có 3 sản phẩm được bán trong cửa hàng, sản phẩm 1 giá 10 sản phẩm 2 giá 15 và sản phẩm 3 có giá là 12.

File buy.txt chứa thông tin về việc mua hàng hóa của khách hàng. Dòng đầu tiên chứa số nguyên dương M là số lượng khách hàng mua hàng trong 1 ngày. M dòng tiếp theo mỗi dòng chứa thông tin như sau: sẽ có  giá nhiều trị nằm trên một hàng, cách nhau bởi một khoảng trắng. Giá trị đầu tiên sẽ là tên khách hàng (dạng string), các giá trị còn lại sẽ đi theo cặp với nhau, tương ứng là: <ID sản phẩm>_<số lượng tương ứng>

     Ví dụ:
          2
          A 1 2 2 3
          B 1 3 3 2
Có nghĩa là có 2 khách hàng A và B, A mua 2 sản phẩm loại 1 và 3 sản phẩm loại 2; B mua 3 sản phẩm loại 1 và 2 sản phẩm loại 3.
Lưu ý: ID của sản phẩm và tên khách hàng là duy nhất (không lặp lại).
Tính số tiền mỗi khách hàng cần trả, sau đó xuất kết quả ra màn hình.
Đầu vào:
2 biến price (là tên của file chứa thông tin sản phẩm) và buy (là tên của file chứa thông tin mua hàng).
Đầu ra:
Số tiền mỗi khách hàng cần trả.


*** Bài 3:
Viết hàm void manage(string library, string book, string author) đọc vào 3 file library.txt và book.txt và author.txt.
Trong đó:
File library.txt chứa thông tin của các thư viện, gồm: dòng đầu tiên chứa số nguyên dương N là số lượng thư viện được khảo sát. N dòng tiếp theo, mỗi dòng chứa 6 giá trị được phân cách nhau bằng dấu khoảng trắng. Cho mỗi dòng, giá trị đầu tiên là tên của Thư viện (tên Thư viện là duy nhất), 5 giá trị còn lại là 5 số nguyên dương, là ID của 5 quyển sách có trong thư viện đó.
     Ví dụ:
          5

          LA 1 2 3 4 5
          LB 5 3 1 2 4
          LC 4 1 5 2 3
File book.txt chứa thông tin của các quyến sách, gồm: dòng đầu tiên chứa số nguyên dương M là số lượng đầu sách có trong tất cả các thư viện. M dòng tiếp theo mỗi dòng chứa 3 giá trị (phân cách nhau bởi một dấu khoảng trắng) có ý nghĩa như sau: giá trị đầu tiên là một số nguyên dương đại diện cho Mã số sách (ID - ID là duy nhất), giá trị thứ 2 là năm sản xuất và giá trị cuối cùng là thể loại.
     Ví dụ:
          5
          1 2000 A
          2 2001 B
          3 1993 D
          4 1997 A
          5 1995 C
File author.txt chứa thông tin của các tác giả, gồm: dòng đầu tiên chứa số nguyên dương P là số lượng tất cả các tác giả của các sách trong các thư viện (giả sử 1 quyển sách chỉ được sáng tác bới 1 tác giả). P dòng tiếp theo mỗi dòng chứa các giá trị như sau (các giá trị được phân cách với nhau bằng 1 dấu khoảng trắng): giá trị đầu tiên là Tên tác giả, các giá trị còn lại là ID của các quyển sách mà người đó đã sáng tác.
     Ví dụ:
          3
          David 1 5
          John 3
          Henry 2 4
Xác định xem Thư viện L có chứa tác phẩm nào của Tác giả A hay không, nếu có xuất ra màn hình giá trị "True", ngược lại xuất ra "False". Với L và A được nhập vào từ bàn phím.
Đầu vào:
3 biến library, book và author lần lượt chứa tên file library.txt và book.txt và author.txt.
Đầu ra:
"True" hoặc "False" ứng với đầu vào.

----------------------------------------Function----------------------------------------------
*** Bài 1:
[Tiếng Việt]
Viết hàm tìm chữ cái xuất hiện nhiều lần nhất trong một chuỗi và số lần xuất hiện của chữ cái đó. Nếu có nhiều chữ cái thỏa mãn, xác định chữ cái có thứ tự alphabet nhỏ nhất.
Đầu vào:
const char* str: chuỗi ký tự đang xét, chỉ bao gồm chữ cái thường và hoa
Đầu ra:
char& res: chữ cái xuất hiện nhiều lần nhất trong chuỗi str
int& freq: số lần xuất hiện của chữ cái đó
Chú ý: tham số res là chữ cái thường. Chữ cái viết hoa strong str cũng được tính là giống chữ cái viết thường (VD "aA" chứa hai ký tự 'a')


*** Bài 2:
[Tiếng Việt]
Cho hai số tự nhiên n và m. Hãy viết một hàm tính toán và trả về giá trị của n trong hệ m phân, biết giá trị m thuộc {2, 4, 8}. Sinh viên cần thay đổi tham số m để có giá trị mặc định là 2 trong định nghĩa hàm.
Đầu vào: 
int n: số tự nhiên n cần được chuyển đổi sang hệ m phân
int m: hệ cơ số cần chuyển đổi. m phải có đối số mặc định là 2 khi định nghĩa hàm.
Đầu ra:
int: giá trị của n trong hệ m phân
Chú ý: đầu vào sẽ đảm bảo giá trị trả về không bị tràn số


*** Bài 3:
